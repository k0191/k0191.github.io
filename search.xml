<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【C语言笔记】变量</title>
    <url>/posts/20230625/231208.html</url>
    <content><![CDATA[<h1 id="1-变量的分类"><a href="#1-变量的分类" class="headerlink" title="1. 变量的分类"></a>1. 变量的分类</h1><ul>
<li><p>局部变量：在代码块中定义的变量叫做局部变量。局部变量具有临时性。局部变量的作用域是。进入代码块中，没有被 <code>static</code> 修饰符修饰定义的变量，自动形成局部变量，退出代码块时该变量自动释放。</p>
</li>
<li><p>全局变量：在所有函数外定义的变量，叫做全局变量。全局变量具有全局性。</p>
</li>
</ul>
<p>代码块：用 <code>&#123;&#125;</code> 括起来的一个区域，就叫做代码块。花括号可以嵌套，最外层花括号定义的变量可以作用于内层花括号中，而内层花括号中定义的变量不可作用于外层花括号。</p>
<h1 id="2-变量的作用域"><a href="#2-变量的作用域" class="headerlink" title="2. 变量的作用域"></a>2. 变量的作用域</h1><p>作用域：指的是该变量的可以被正常访问的代码区域，也就是变量的有效区域</p>
<ul>
<li>局部变量：只在本代码块内有效，从 <code>定义</code> 的位置起，到代码块结束。</li>
<li>全局变量：整个程序运行期间，都有效，从 <code>声明</code> 的位置起，直到文件结束。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">func1</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">    a++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> func2（<span class="type">void</span>）</span><br><span class="line">&#123;</span><br><span class="line">    a--;</span><br><span class="line">    <span class="keyword">if</span> (expr) &#123;</span><br><span class="line">        b = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="type">int</span> b = <span class="number">2</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;b = %d\n&quot;</span>, b); <span class="comment">//输出 b = 2</span></span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>a为全局变量，作用域从定义的一行起到文件结束，func1和func2都可以访问。</li>
<li>func2上方声明的b为全局变量，作用域从定义的一行起到文件结束，只有func2可以访问。</li>
<li>do-while结构中声明的b为局部变量，作用域为do while的整个结构，do while结束，则该变量被释放。若局部变量与全局变量同名，则在该局部变量的作用域内优先使用局部变量。</li>
</ul>
<h1 id="3-变量的生命周期"><a href="#3-变量的生命周期" class="headerlink" title="3. 变量的生命周期"></a>3. 变量的生命周期</h1><p>生命周期：指的是该变量从定义到被释放的时间范围，所谓的释放，指的是曾经开辟的空间”被释放”。</p>
<ul>
<li>局部变量：进入代码块，形成局部变量”开辟空间”，退出代码块，”释放”局部变量。</li>
<li>全局变量：定义完成之后，程序运行的整个生命周期内，该变量一直都有效。</li>
</ul>
<p>作用域和生命周期的区别：作用域更多的是指变量有效区域，也就是变量在哪里可以被访问到，而生命周期是一个时间概念，是指变量什么时候开辟和释放。</p>
<h1 id="4-变量的存储方式"><a href="#4-变量的存储方式" class="headerlink" title="4. 变量的存储方式"></a>4. 变量的存储方式</h1><ul>
<li>静态存储：在被分配内存单元后，内存单元的地址一直保持不变，不会被释放，直到程序结束。</li>
<li>动态存储：在程序执行的时候，使用他的时候才分配内存单元，使用完毕后立即释放，再使用在分配。</li>
</ul>
<h2 id="4-1-存储方式的修饰符"><a href="#4-1-存储方式的修饰符" class="headerlink" title="4.1. 存储方式的修饰符"></a>4.1. 存储方式的修饰符</h2><h3 id="4-1-1-auto"><a href="#4-1-1-auto" class="headerlink" title="4.1.1 auto"></a>4.1.1 auto</h3><p>在C语言中，变量的声明默认使用该关键字，变量自动使用默认的存储方式，一般不写明该关键字。<br>全局变量全部使用静态存储方式，局部变量默认使用动态存储方式。</p>
<h3 id="4-1-2-static"><a href="#4-1-2-static" class="headerlink" title="4.1.2 static"></a>4.1.2 static</h3><p>内部静态变量声明关键字，使用该关键字声明的变量使用静态存储方式。</p>
<h3 id="4-1-3-register"><a href="#4-1-3-register" class="headerlink" title="4.1.3 register"></a>4.1.3 register</h3><p>声明寄存器变量关键字，该关键字只能对局部非静态变量使用，即存储方式为动态存储方式，被该关键字声明的变量为寄存器变量，直接存储在CPU的寄存器中，提高该变量的访问效率。寄存器变量的类型只能是cha、int或指针类型。</p>
<h1 id="5-变量的链接属性"><a href="#5-变量的链接属性" class="headerlink" title="5. 变量的链接属性"></a>5. 变量的链接属性</h1><h2 id="5-1-翻译单元"><a href="#5-1-翻译单元" class="headerlink" title="5.1. 翻译单元"></a>5.1. 翻译单元</h2><p>符号（比如函数名或者变量）可以在其作用域内多次声明，但是只能定义一次，这就是 <code>ODR</code>（一个定义规则）。<br>变量的声明和定义往往是一起的，但可以使用 <code>extern</code> 关键字声明外部全局变量。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">0</span>; <span class="comment">//声明、定义、初始化全部完成</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> b;   <span class="comment">//声明和定义，未进行初始化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> b; <span class="comment">//声明，声明变量b是具有外部链接属性的变量，一般放在头文件中</span></span><br></pre></td></tr></table></figure>
<p>程序是由一个或者多个翻译单元组成。</p>
<ul>
<li><p>翻译单元由实现文件以及它直接或者间接包含的所有标头组成。</p>
</li>
<li><p>实现文件通常具有 <code>c</code>、<code>cpp</code> 或 <code>cxx</code> 的文件扩展名。</p>
</li>
<li><p>标头文件通常具有 <code>h</code> 或 <code>hpp</code> 的文件扩展名。</p>
</li>
</ul>
<p>每个翻译单元都是由编译器单独编译的，编译完成之后，链接器会将编译的翻译单元合并到一个程序中，ODR的冲突通常显示为链接器错误。当同一名称在不同的翻译单元中具有两个不同的定义时，将会发生链接器链接错误。链接的概念仅适用于全局变量。链接的概念不适用于在代码块内声明的变量。</p>
<p>通常，使全局变量在多个文件中可见的最佳方式是将其放在标头文件中，然后在每个需要引用该变量的源文件中添加 <code>#include</code> 指令，将其包含到源文件中，通过在标头内容中添加 <code>#ifndef</code> 的声明保护，可以确保它声明的名称只被定义一次。</p>
<h2 id="5-2-外部链接-extern"><a href="#5-2-外部链接-extern" class="headerlink" title="5.2. 外部链接(extern)"></a>5.2. 外部链接(extern)</h2><p>在程序的任何翻译单元中都可见，全局变量使用 <code>extern</code> 关键字进行声明。具有外部链接属性的变量，在所有翻译单元中只能被定义一次。</p>
<h2 id="5-3-内部链接-static"><a href="#5-3-内部链接-static" class="headerlink" title="5.3. 内部链接(static)"></a>5.3. 内部链接(static)</h2><p>只能在定义它的翻译单元中可见，全局变量使用 <code>static</code> 关键字进行声明。具有内部链接属性的变量，可以在其他翻译单元存在定义。</p>
<h1 id="6-变量的数据类型"><a href="#6-变量的数据类型" class="headerlink" title="6. 变量的数据类型"></a>6. 变量的数据类型</h1><p>数据类型用于定义变量在内存中所占用的内存大小，不同位数的编译器中数据的基本类型所占用的内存大小会有所不同，即数据类型所占用的空间大小由使用的编译器决定，可通过 <code>sizeof</code> 关键字求变量所占用的内存大小。</p>
<p>但有几条铁定的原则( <code>ANSI/ISO</code> 制订):</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sizeof</span>(<span class="type">short</span> <span class="type">int</span>) &lt;= <span class="keyword">sizeof</span>(<span class="type">int</span>)</span><br><span class="line"><span class="keyword">sizeof</span>(<span class="type">int</span>) &lt;= <span class="keyword">sizeof</span>(<span class="type">long</span> <span class="type">int</span>)</span><br><span class="line"><span class="keyword">sizeof</span>(<span class="type">short</span> <span class="type">int</span>) &gt;= <span class="number">2</span></span><br><span class="line"><span class="keyword">sizeof</span>(<span class="type">long</span> <span class="type">int</span>) &gt;= <span class="number">4</span></span><br></pre></td></tr></table></figure>
<h2 id="6-1-基本类型"><a href="#6-1-基本类型" class="headerlink" title="6.1. 基本类型"></a>6.1. 基本类型</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">关键字</th>
<th style="text-align:center">类型</th>
<th style="text-align:center">16位编译器（unit：Byte）</th>
<th style="text-align:center">32位编译器（unit：Byte）</th>
<th style="text-align:center">64位编译器（unit：Byte）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">signed char</td>
<td style="text-align:center">有符号字符型</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">unsigned char</td>
<td style="text-align:center">无符号字符型</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">signed short</td>
<td style="text-align:center">有符号短整型</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">unsigned short</td>
<td style="text-align:center">无符号短整型</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">signed int</td>
<td style="text-align:center">有符号整型</td>
<td style="text-align:center">2</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">unsigned int</td>
<td style="text-align:center">无符号整型</td>
<td style="text-align:center">2</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">signed long</td>
<td style="text-align:center">有符号长整型</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">unsigned long</td>
<td style="text-align:center">无符号长整型</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">float</td>
<td style="text-align:center">单精度浮点型</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">double</td>
<td style="text-align:center">双精度浮点型</td>
<td style="text-align:center">8</td>
<td style="text-align:center">8</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">void *</td>
<td style="text-align:center">指针变量</td>
<td style="text-align:center">2</td>
<td style="text-align:center">4</td>
<td style="text-align:center">8</td>
</tr>
</tbody>
</table>
</div>
<h2 id="6-2-空类型"><a href="#6-2-空类型" class="headerlink" title="6.2. 空类型"></a>6.2. 空类型</h2><h3 id="6-2-1-void"><a href="#6-2-1-void" class="headerlink" title="6.2.1 void"></a>6.2.1 void</h3><p>指示对象为空类型(无类型)，即对象无可用的值。常用于函数的返回值或形参列表，表示函数无返回值，或函数调用时不需要传入参数。不可用于变量的声明。</p>
<p><code>sizeof(void) = 1</code></p>
<h2 id="6-3-构造类型"><a href="#6-3-构造类型" class="headerlink" title="6.3. 构造类型"></a>6.3. 构造类型</h2><h3 id="6-3-1-数组"><a href="#6-3-1-数组" class="headerlink" title="6.3.1. 数组"></a>6.3.1. 数组</h3><h4 id="6-3-1-1-数组的定义"><a href="#6-3-1-1-数组的定义" class="headerlink" title="6.3.1.1. 数组的定义"></a>6.3.1.1. 数组的定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> str1[<span class="number">5</span>];      <span class="comment">//一维字符型数组，该数组所占用的内存大小为5个字节</span></span><br><span class="line"><span class="type">int</span> counts[<span class="number">5</span>];     <span class="comment">//一维整型数组，该数组所占用的内存大小为 5*sizeof(int) 个字节</span></span><br><span class="line"><span class="type">long</span> money[<span class="number">5</span>][<span class="number">10</span>]; <span class="comment">//二维长整型数组(5行10列)，该数组所占用的内存大小为 5*10*sizeof(int) 个字节</span></span><br></pre></td></tr></table></figure>
<p>注意：在使用较老的编译器时（仅支持C99之前标准的编译器），在定义数组时，数组的元素个数（[]内的数）需是常量表达式（C99标准开始支持变长数组，数组元素的个数可以是变量）。</p>
<h4 id="6-3-1-2-数组的初始化"><a href="#6-3-1-2-数组的初始化" class="headerlink" title="6.3.1.2. 数组的初始化"></a>6.3.1.2. 数组的初始化</h4><p>数组的初始化即给数组里放一些初始值，数组使用{}进行初始化，在大小给定的情况下，可以完全初始化，也可以不完全初始化（其余默认放0），在大小没有给定的情况下根据初始化内容确定数组的大小。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明、定义并初始化一个大小为5字节的字符类型数组,内容为&quot;hello&quot;</span></span><br><span class="line"><span class="type">char</span> str1[<span class="number">5</span>] = &#123;<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//声明、定义并初始化一个大小为5字节的字符类型数组,内容为&quot;world&quot;</span></span><br><span class="line"><span class="type">char</span> str2[]  = &#123;<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//声明、定义并初始化一个大小为13字节的字符类型数组,内容为&quot;hello world!\0&quot;</span></span><br><span class="line"><span class="type">char</span> str3[] = <span class="string">&quot;hello world!&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>C语言中字符串的存储是以 <code>&#39;\0&#39;</code> 结束的，使用 <code>&quot;&quot;</code> 包含的字符为字符串常量，在内存中其最后一个位置处会被自动填充 <code>&#39;\0&#39;</code>。</p>
<h3 id="6-3-2-enum"><a href="#6-3-2-enum" class="headerlink" title="6.3.2. enum"></a>6.3.2. enum</h3><p>有些数据的取值往往是有限的，只能是非常少量的整型值，并且最好为每个值都取一个名称，以方便在后续代码中使用。这时就需要用枚举类型来为这些整型值定义一个明确含义的名称。枚举值默认从 0 开始，往后逐个加 1（递增）。</p>
<h4 id="6-3-2-1-枚举类型的定义"><a href="#6-3-2-1-枚举类型的定义" class="headerlink" title="6.3.2.1. 枚举类型的定义"></a>6.3.2.1. 枚举类型的定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个名叫week的枚举类型，其成员的值分别为&#123;0, 1, 2, 3, 4, 5, 6, 7&#125;</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">week</span>&#123;</span>Mon, Tues, Wed, Thurs, Fri, Sat, Sun&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个名叫dev_id的枚举类型，其成员的值分别为&#123;2, 3, 4&#125;</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">dev_id</span>&#123;</span>OPT_ID = <span class="number">2</span>, FPGA_ID = <span class="number">3</span>, DPD_ID = <span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个名叫err_code的枚举类型，其成员的值分别为&#123;-1, 0, 1&#125;</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">err_code</span>&#123;</span>fail = <span class="number">-1</span>, ok, unexpected&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="6-3-2-2-枚举变量的定义"><a href="#6-3-2-2-枚举变量的定义" class="headerlink" title="6.3.2.2. 枚举变量的定义"></a>6.3.2.2. 枚举变量的定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个类型为week枚举类型的变量today，未初始化</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">week</span> <span class="title">today</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个类型为BOOLEAN枚举类型的变量result，未初始化</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">BOOLEAN</span>&#123;</span>FALSE = <span class="number">0</span>, TRUE = <span class="number">1</span>&#125;result;</span><br></pre></td></tr></table></figure>
<h4 id="6-3-2-3-枚举变量的赋值"><a href="#6-3-2-3-枚举变量的赋值" class="headerlink" title="6.3.2.3. 枚举变量的赋值"></a>6.3.2.3. 枚举变量的赋值</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用week枚举变量的成员为today赋值，此时today = 0</span></span><br><span class="line">today = Mon;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个类型为dev_id枚举类型的变量dev, 并初始化为FPGA_ID，此时 dev = 3</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">dev_id</span> <span class="title">dev</span> =</span> FPGA_ID;</span><br></pre></td></tr></table></figure>
<h3 id="6-3-3-struct"><a href="#6-3-3-struct" class="headerlink" title="6.3.3. struct"></a>6.3.3. struct</h3><p>结构体类型，将不同类型的数据组合成一个有机的整体。结构体的成员可以为变量，也可以是结构体变量，成员变量名可以程序中结构体外的定义的变量名相同。结构体变量所占内存长度是各成员占内存长度之和，每个成员分别占有其自己的内存单元。在实际的操作系统中存在内存对齐，结构体的整体大小是结构体中占用最大字节的成员的整数倍。</p>
<h4 id="6-3-3-1-结构体类型的定义"><a href="#6-3-3-1-结构体类型的定义" class="headerlink" title="6.3.3.1. 结构体类型的定义"></a>6.3.3.1. 结构体类型的定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个名叫student的结构体类型，成员有数组类型的name，无符号整型number，单精度浮点型score</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> number;</span><br><span class="line">    <span class="type">float</span> score;</span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>
<h4 id="6-3-3-2-结构体变量的定义"><a href="#6-3-3-2-结构体变量的定义" class="headerlink" title="6.3.3.2. 结构体变量的定义"></a>6.3.3.2. 结构体变量的定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个student结构体类型的变量xiaoai，未初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">xiaoai</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义school结构体类型的变量qinghua和beida， 未初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">school</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> addr[<span class="number">100</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span> NO;</span><br><span class="line">&#125;qinghua, beida;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个匿名结构类型的变量man，未初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">student</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">school</span> <span class="title">school</span>;</span></span><br><span class="line">&#125;man;</span><br></pre></td></tr></table></figure>
<h4 id="6-3-3-3-结构体变量的初始化与赋值"><a href="#6-3-3-3-结构体变量的初始化与赋值" class="headerlink" title="6.3.3.3. 结构体变量的初始化与赋值"></a>6.3.3.3. 结构体变量的初始化与赋值</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个student结构体类型的变量xiaoai，并初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">xiaoai</span> =</span> &#123;<span class="string">&quot;xiaoai&quot;</span>, <span class="number">0x170222</span>, <span class="number">59.0f</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用已定义的结构体变量xiaoai去初始化结构体变量xiaowen</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">xiaowen</span> =</span> xiaoai;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C风格初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">xiaohua</span> =</span> &#123;.number = <span class="number">0x170223</span>, .name = <span class="string">&quot;xiaohua&quot;</span>, .score = <span class="number">60.0f</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++风格初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">xiaofan</span> =</span> &#123;number : <span class="number">0x170224</span>, score : <span class="number">90.0f</span>, name : <span class="string">&quot;xiaofan&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值</span></span><br><span class="line">xiaoai.score = <span class="number">75.0f</span>;</span><br><span class="line">man = &#123;xiaoai, beida&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="6-3-4-union"><a href="#6-3-4-union" class="headerlink" title="6.3.4. union"></a>6.3.4. union</h3><p>联合体类型将不同类型的变量存放到同一段内存单元中，联合体变量的成员存放在同一个地址开始的内存单元，其首地址都相同，变量所占内存长度等于最长的成员的长度。联合体变量中起作用的成员是最后一次存放的成员，在存入一个新的成员后原有的成员就失去作用。</p>
<h4 id="6-3-4-1-联合体类型的定义"><a href="#6-3-4-1-联合体类型的定义" class="headerlink" title="6.3.4.1. 联合体类型的定义"></a>6.3.4.1. 联合体类型的定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个名叫bin的联合体类型，sizeof(union bin) = 4</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">bin</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> val8;</span><br><span class="line">    <span class="type">short</span> val16;</span><br><span class="line">    <span class="type">int</span> val32;</span><br><span class="line">    <span class="type">float</span> f32;</span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个名叫data的联合体类型，sizeof(long) = 8, sizeof(union data) = 16</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">data</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> bin[<span class="number">16</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="type">char</span> id;</span><br><span class="line">        <span class="type">char</span> sex;</span><br><span class="line">        <span class="type">short</span> age;</span><br><span class="line">        <span class="type">int</span> number;</span><br><span class="line">        <span class="type">long</span> hash;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;   </span><br><span class="line"></span><br><span class="line"><span class="comment">//若调整定义变量的顺序, 则此时 sizeof(union data) = 24</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">data</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> bin[<span class="number">16</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="type">char</span> id;</span><br><span class="line">        <span class="type">char</span> sex;</span><br><span class="line">        <span class="type">short</span> age;</span><br><span class="line">        <span class="type">long</span> hash;</span><br><span class="line">        <span class="type">int</span> number;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="6-3-4-2-联合体变量的定义"><a href="#6-3-4-2-联合体变量的定义" class="headerlink" title="6.3.4.2. 联合体变量的定义"></a>6.3.4.2. 联合体变量的定义</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个bin联合体类型的变量value，未初始化</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">bin</span> <span class="title">value</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个匿名联合体类型的变量key，未初始化</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">&#125;key;</span><br></pre></td></tr></table></figure>
<h4 id="6-3-4-3-联合体变量的初始化与赋值"><a href="#6-3-4-3-联合体变量的初始化与赋值" class="headerlink" title="6.3.4.3. 联合体变量的初始化与赋值"></a>6.3.4.3. 联合体变量的初始化与赋值</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//直接初始化</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">bin</span> <span class="title">bit8</span> =</span> &#123;<span class="number">10</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定成员初始化</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">bin</span> <span class="title">bit16</span> =</span> &#123;.<span class="type">short</span> = <span class="number">10</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用已定义的同类型联合体初始化</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">bin</span> <span class="title">bit32</span> =</span> bit8;</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">bin</span> <span class="title">bit32f</span>;</span> </span><br><span class="line">bit32f.val32 = <span class="number">0xff00</span>;</span><br><span class="line">bit32f.val8 = <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;bit32f.val32 = %x\n&quot;</span>, bit32f.val32);</span><br><span class="line"><span class="comment">// 输出 bit32f.val32 = ffff</span></span><br></pre></td></tr></table></figure>
<h2 id="6-4-指针类型"><a href="#6-4-指针类型" class="headerlink" title="6.4. 指针类型"></a>6.4. 指针类型</h2><p>C语言中将地址形象化的称为”指针”，一个变量的地址称为该变量的”指针”。指针是一个地址，而指针类型的变量是存放地址的变量。指针类型所占用的内存大小与操作系统的位数有关，基本上指针类型所占用的空间大小bit数等于操作系统的位数。</p>
<h3 id="6-4-1-指针类型变量的定义"><a href="#6-4-1-指针类型变量的定义" class="headerlink" title="6.4.1. 指针类型变量的定义"></a>6.4.1. 指针类型变量的定义</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个指向char数据类型的指针变量pval8，该变量存放的值是char类型变量的首地址</span></span><br><span class="line"><span class="type">char</span> *pval8;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个指向float数据类型的指针变量pval32，该变量存放的值是float类型变量的首地址</span></span><br><span class="line"><span class="type">float</span> *pval32;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个空类型的指针变量pvoid，该变量存放的值是一个未知数据类型的变量的首地址</span></span><br><span class="line"><span class="type">void</span> *pvoid;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个指向enum week数据类型的指针变量pweek，该变量存放的值是enum week类型变量的首地址</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">week</span> *<span class="title">pweek</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个指向struct student数据类型的指针变量pstu,该变量存放的值是struct student类型变量的首地址</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">pstu</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个指向union bin数据类型的指针变量pbin，该变量存放的值是union bin类型变量的首地址</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">bin</span> *<span class="title">pbin</span>;</span></span><br></pre></td></tr></table></figure>
<h3 id="6-4-2-指针类型变量的赋值"><a href="#6-4-2-指针类型变量的赋值" class="headerlink" title="6.4.2. 指针类型变量的赋值"></a>6.4.2. 指针类型变量的赋值</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> c = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将变量c的地址赋值给指针变量pval8</span></span><br><span class="line"><span class="type">char</span> *pval8 = &amp;c;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C语言中NULL是((void *)0)的宏定义，即将指针变量赋空值，不指向任何有效地址</span></span><br><span class="line"><span class="type">int</span> *pval32 = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将char类型的变量地址值赋值给空类型指针</span></span><br><span class="line"><span class="type">void</span> *pvoid = (<span class="type">void</span> *)&amp;c;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将int类型的指针变量的值赋值给union bin类型的指针变量，并显示的转化其指针类型</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">bin</span> *<span class="title">pbin</span> =</span> (<span class="keyword">union</span> bin *)pval32;</span><br></pre></td></tr></table></figure>
<h2 id="6-5-自定义类型"><a href="#6-5-自定义类型" class="headerlink" title="6.5. 自定义类型"></a>6.5. 自定义类型</h2><h3 id="6-5-1-typedef"><a href="#6-5-1-typedef" class="headerlink" title="6.5.1. typedef"></a>6.5.1. typedef</h3><p>typedef 关键字是为一种数据类型定义一个新名字，这里的数据类型包括基本数据类型（int，char等）、空类型、构造类型（struct等）。typedef 本身是一种存储类的关键字，与 auto、extern、static、register 等关键字不能出现在同一个表达式中。使用 typedef 定义的变量类型，其作用范围限制在所定义的函数或者文件内（取决于此变量定义的位置）。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自定义一个新数据类型u8，该类型等效 unsigned char</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> u8;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义一个新数据类型u16，该数据类型等效 unsigned short</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">short</span> u16;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义一个新数据类型string，该类型等效 unsigned char *</span></span><br><span class="line"><span class="keyword">typedef</span> u8 *<span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义一个新数据类型student_t，该类型等效 struct student</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">student_t</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义一个新数据类型path，该类型是一个大小为64的数组，等效 unsigned char [64];</span></span><br><span class="line"><span class="keyword">typedef</span> u8 <span class="type">path_t</span>[<span class="number">64</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义类型的使用</span></span><br><span class="line">u8 id = <span class="number">8</span>;</span><br><span class="line"><span class="built_in">string</span> str = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line"><span class="type">student_t</span> xiaoai = &#123;<span class="string">&quot;xiaoai&quot;</span>, <span class="number">170222</span>, <span class="number">59.0f</span>&#125;;</span><br><span class="line"><span class="type">path_t</span> local_path = <span class="string">&quot;/home/k0191/c-study&quot;</span>;</span><br></pre></td></tr></table></figure>
<h1 id="7-变量的类型限定符"><a href="#7-变量的类型限定符" class="headerlink" title="7. 变量的类型限定符"></a>7. 变量的类型限定符</h1><h2 id="7-1-const"><a href="#7-1-const" class="headerlink" title="7.1. const"></a>7.1. const</h2><p>const声明的变量为只读变量，在定义时必须初始化，且定义后不能在只读变量所在的作用域中被改变。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在定义时初始化，此后PI的值无法被修改</span></span><br><span class="line"><span class="type">const</span> <span class="type">float</span> PI = <span class="number">3.1415926</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> local_path1[<span class="number">64</span>] = <span class="string">&quot;/home/k0191/c-study&quot;</span>;</span><br><span class="line"><span class="type">char</span> local_path2[<span class="number">64</span>] = <span class="string">&quot;/home/k0191/cpp-study&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//常量指针，无法通过c_path指针去修改数组local_path1的值，但可以修改c_path指针的值</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *c_path = local_path1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const char *与char const *等效</span></span><br><span class="line">c_path = local_path2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针常量，不可修改_cpath指针的值，但可以通过_cpath指针修改local_path1的值</span></span><br><span class="line"><span class="type">char</span> * <span class="type">const</span> _cpath = local_path1;</span><br><span class="line">_cpath[<span class="number">6</span>] = <span class="string">&#x27;y&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//不可修改ccpath指针的值，也不可用通过ccpath指针修改local_path1的值</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> * <span class="type">const</span> ccpath = local_path1;</span><br></pre></td></tr></table></figure>
<ul>
<li>当一个 <strong><code>const</code></strong> 修饰的全局变量的值，被意外的改变时会引发程序崩溃。</li>
</ul>
<h2 id="7-2-volatile"><a href="#7-2-volatile" class="headerlink" title="7.2. volatile"></a>7.2. volatile</h2><p>volatile声明的变量为易变的变量。用这个限定符主要是让编译器在优化代码的时候不能优化此变量的取值，需要从原始位置进行取值。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> b = a;</span><br><span class="line">    <span class="type">int</span> *ptr = &amp;a;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用汇编，通过指针ptr修改变量a的值，让编译器无法感知a的值发生变化</span></span><br><span class="line">    <span class="keyword">asm</span> (<span class="string">&quot;mov %[var], (%[ptr])&quot;</span> : : [ptr] <span class="string">&quot;r&quot;</span>, [var] <span class="string">&quot;r&quot;</span> (<span class="number">20</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> c = a;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d, b = %d,  c = %d\n&quot;</span>, a, b, c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当为编译器添加了 <strong><code>-O</code></strong> 选项后，编译器对这部分代码进行了优化，编译器在编译时发现有两个变量都使用了a，但是a的值在这之间并没有被使用。于是编译器在将a的值取出来之后，临时存放到了寄存器中，当变量c需要使用a的时候，编译器直接从寄存器中读取a的值，而不是从存储a的原始位置直接读取。结果就是输出打印 <code>a = 1, b = 1, c = 1</code>，而不是准确的 <code>a = 20, b = 1, c =20</code>。</p>
<p>在C语言项目中优化选项是必须的，而那些代表外部寄存器的值的变量的变化编译器是无法感知的，所以需要在这类变量前加上 <strong><code>volatile</code></strong> 关键词进行修饰，避免变量被编译器优化。</p>
<ul>
<li><p>volatile对应的变量可能在你的程序本身不知道的情况下发生改变，比如在多线程的程序中，共同访问的内存当中，多个程序都可以操纵这个变量，编译器是无法判定何时这个变量会发生变化，当变量表示一个外部设备的某个状态对应，当外部设备发生操作的时候，通过驱动程序和中断事件，系统改变了这个变量的数值，而编译器也是无法得知的。</p>
</li>
<li><p>对于volatile类型的变量，系统每次用到他的时候都是直接从对应的内存当中提取，而不会利用cache当中的原有数值，以适应它的未知何时会发生的变化，系统对这种变量的处理不会做优化——显然也是因为它的数值随时都可能变化的情况。</p>
</li>
<li><p>const 与 volatile 可同时修饰变量。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>【C语言笔记】表达式</title>
    <url>/posts/20230629/134737.html</url>
    <content><![CDATA[<h1 id="TODO-💤"><a href="#TODO-💤" class="headerlink" title="TODO 💤"></a>TODO 💤</h1>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>【C语言笔记】函数</title>
    <url>/posts/20230629/135028.html</url>
    <content><![CDATA[<h1 id="TODO-💤"><a href="#TODO-💤" class="headerlink" title="TODO 💤"></a>TODO 💤</h1>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>【网站教程】Hexo + Butterfly 搭建个人博客</title>
    <url>/posts/20230626/170147.html</url>
    <content><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>本网站基于hexo框架和butterfly主题进行搭建，由GitHub Pages提供部署服务，以下是参考链接</p>
<ul>
<li>Hexo: <a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></li>
<li>Butterfly: <a href="https://butterfly.js.org/">https://butterfly.js.org/</a></li>
<li>Fomalhaut: <a href="https://www.fomal.cn/">https://www.fomal.cn/</a></li>
</ul>
<p>本文章仅用于对自己建站过程的记录，新手请查看上述链接的描述，更为详细！！！</p>
<table><tr><td bgcolor=DarkSeaGreen>本站使用的hexo版本为 6.3.0, butterfly版本为 4.9.0</td></tr></table>

<h1 id="2-环境准备"><a href="#2-环境准备" class="headerlink" title="2. 环境准备"></a>2. 环境准备</h1><table><tr><td bgcolor=MistyRose>本文不描述以下工具的安装教程和账号注册过程</td></tr></table>

<ul>
<li>Git</li>
<li>Node</li>
<li>Github账号</li>
<li>Hexo</li>
<li>VsCode</li>
</ul>
<h1 id="3-Hexo初始化"><a href="#3-Hexo初始化" class="headerlink" title="3. Hexo初始化"></a>3. Hexo初始化</h1><p>在电脑任意路径下新建一个空的文件夹，建议以项目名命名，使用 <strong><code>VS Code</code></strong> 打开该文件夹，在 <strong><code>VS Code</code></strong> 中打开 <strong><code>Git Bash</code></strong> 终端，输入以下命令:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p>
<h1 id="4-Butterfly主题安装"><a href="#4-Butterfly主题安装" class="headerlink" title="4. Butterfly主题安装"></a>4. Butterfly主题安装</h1><p>在该项目文件夹下，打开 <strong><code>Git Bash</code></strong> 终端，输入:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><br>更新:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm update hexo-theme-butterfly</span><br></pre></td></tr></table></figure></p>
<h2 id="4-1-应用主题"><a href="#4-1-应用主题" class="headerlink" title="4.1. 应用主题"></a>4.1. 应用主题</h2><p>为防止后续更新主题，导致自定义配置失效，将主题文件夹<code>themes/</code>下的<code>_config.yml</code>复制到项目文件夹目录下，并重命名为<code>_config.butterfly.yml</code>，后续主题配置的修改将在该文件上进行，主题文件夹下的<code>_config.yml</code>应保留，后续改动出错后，可参照进行回滚。</p>
<p>修改项目文件夹下的<code>_config.yml</code>站点配置文件，进行如下修改:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure></p>
<h2 id="4-2-安装主题渲染器"><a href="#4-2-安装主题渲染器" class="headerlink" title="4.2. 安装主题渲染器"></a>4.2. 安装主题渲染器</h2><p>如果没有pug以及stylus的渲染器，请下载安装，这两个渲染器是Butterfly生成基础页面所需的依赖包:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure></p>
<h2 id="4-3-修改主题CDN"><a href="#4-3-修改主题CDN" class="headerlink" title="4.3 修改主题CDN"></a>4.3 修改主题CDN</h2><p>主题所使用的一些js脚本的资源站，可能国内访问较慢，导致网站渲染的结果与实际不符，遇到渲染与教程中不同时，需要查看网页源码，看是不是渲染的脚本请求超时导致的，以下为国内的CDN配置，修改 <strong><code>_config.butterfly.yml</code></strong> 中的参数如下:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CDN</span></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work</span></span><br><span class="line"><span class="comment"># 非必要請不要修改</span></span><br><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="comment"># The CDN provider of internal scripts (主題內部 js 的 cdn 配置)</span></span><br><span class="line">  <span class="comment"># option: local/jsdelivr/unpkg/cdnjs/custom</span></span><br><span class="line">  <span class="comment"># Dev version can only choose. ( dev版的主題只能設置為 local )</span></span><br><span class="line">  <span class="attr">internal_provider:</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The CDN provider of third party scripts (第三方 js 的 cdn 配置)</span></span><br><span class="line">  <span class="comment"># option: local/jsdelivr/unpkg/cdnjs/custom</span></span><br><span class="line">  <span class="comment"># when set it to local, you need to install hexo-butterfly-extjs</span></span><br><span class="line">  <span class="attr">third_party_provider:</span> <span class="string">cdnjs</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Add version number to CDN, true or false</span></span><br><span class="line">  <span class="attr">version:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom format</span></span><br><span class="line">  <span class="comment"># For example: https://cdn.staticfile.org/$&#123;cdnjs_name&#125;/$&#123;version&#125;/$&#123;min_cdnjs_file&#125;</span></span><br><span class="line">  <span class="attr">custom_format:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line">    <span class="comment"># main_css:</span></span><br><span class="line">    <span class="comment"># main:</span></span><br><span class="line">    <span class="comment"># utils:</span></span><br><span class="line">    <span class="comment"># translate: https://cdn1.tianli0.top/npm/js-heo@1.0.6/translate/tw_cn.js</span></span><br><span class="line">    <span class="comment"># local_search:</span></span><br><span class="line">    <span class="comment"># algolia_js: </span></span><br><span class="line">    <span class="attr">algolia_search_v4:</span> <span class="string">https://cdn.staticfile.org/algoliasearch/4.14.3/algoliasearch-lite.umd.min.js</span></span><br><span class="line">    <span class="attr">instantsearch_v4:</span> <span class="string">https://cdn.staticfile.org/instantsearch.js/4.49.2/instantsearch.production.min.js</span></span><br><span class="line">    <span class="attr">pjax:</span> <span class="string">https://lib.baomitu.com/pjax/0.2.8/pjax.min.js</span></span><br><span class="line">    <span class="comment"># gitalk: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/gitalk/1.7.2/gitalk.min.js</span></span><br><span class="line">    <span class="comment"># gitalk_css: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/gitalk/1.7.2/gitalk.min.css</span></span><br><span class="line">    <span class="comment"># blueimp_md5:</span></span><br><span class="line">    <span class="comment"># valine: https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/valine/1.4.16/Valine.min.js</span></span><br><span class="line">    <span class="comment"># disqusjs: https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/disqusjs/1.3.0/disqus.js</span></span><br><span class="line">    <span class="comment"># disqusjs_css: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/disqusjs/1.3.0/disqusjs.css</span></span><br><span class="line">    <span class="attr">twikoo:</span> <span class="string">https://cdn.staticfile.org/twikoo/1.6.8/twikoo.all.min.js</span></span><br><span class="line">    <span class="comment"># waline_js: https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/waline/1.5.4/Waline.min.js</span></span><br><span class="line">    <span class="comment"># waline_css:</span></span><br><span class="line">    <span class="attr">sharejs:</span> <span class="string">https://lib.baomitu.com/social-share.js/1.0.16/js/social-share.min.js</span></span><br><span class="line">    <span class="attr">sharejs_css:</span> <span class="string">https://lib.baomitu.com/social-share.js/1.0.16/css/share.min.css</span></span><br><span class="line">    <span class="comment"># mathjax: https://cdn.staticfile.org/mathjax/3.2.2/es5/mml-chtml.min.js</span></span><br><span class="line">    <span class="comment"># katex: https://lib.baomitu.com/KaTeX/latest/katex.min.css</span></span><br><span class="line">    <span class="comment"># katex_copytex:</span></span><br><span class="line">    <span class="comment"># mermaid:</span></span><br><span class="line">    <span class="comment"># canvas_ribbon:</span></span><br><span class="line">    <span class="comment"># canvas_fluttering_ribbon:</span></span><br><span class="line">    <span class="comment"># canvas_nest:</span></span><br><span class="line">    <span class="attr">lazyload:</span> <span class="string">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/vanilla-lazyload/17.3.1/lazyload.iife.min.js</span></span><br><span class="line">    <span class="attr">instantpage:</span> <span class="string">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/instant.page/5.1.0/instantpage.min.js</span></span><br><span class="line">    <span class="attr">typed:</span> <span class="string">https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/typed.js/2.0.12/typed.min.js</span></span><br><span class="line">    <span class="comment"># pangu:</span></span><br><span class="line">    <span class="attr">fancybox_css_v4:</span> <span class="string">https://cdn.staticfile.org/fancyapps-ui/4.0.31/fancybox.min.css</span></span><br><span class="line">    <span class="attr">fancybox_v4:</span> <span class="string">https://cdn.staticfile.org/fancyapps-ui/4.0.31/fancybox.umd.min.js</span></span><br><span class="line">    <span class="comment"># medium_zoom: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/medium-zoom/1.0.6/medium-zoom.min.js</span></span><br><span class="line">    <span class="comment"># snackbar_css: https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/node-snackbar/0.1.16/snackbar.min.css</span></span><br><span class="line">    <span class="comment"># snackbar: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/node-snackbar/0.1.16/snackbar.min.js</span></span><br><span class="line">    <span class="comment"># activate_power_mode:</span></span><br><span class="line">    <span class="comment"># fireworks:</span></span><br><span class="line">    <span class="comment"># click_heart:</span></span><br><span class="line">    <span class="comment"># ClickShowText:</span></span><br><span class="line">    <span class="attr">fontawesomeV6:</span> <span class="string">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/font-awesome/6.0.0/css/all.min.css</span></span><br><span class="line">    <span class="comment"># flickr_justified_gallery_js: https://cdn.staticfile.org/flickr-justified-gallery/2.1.2/fjGallery.min.js</span></span><br><span class="line">    <span class="comment"># flickr_justified_gallery_css: https://cdn.staticfile.org/flickr-justified-gallery/2.1.2/fjGallery.min.css</span></span><br><span class="line">    <span class="attr">aplayer_css:</span> <span class="string">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/aplayer/1.10.1/APlayer.min.css</span></span><br><span class="line">    <span class="attr">aplayer_js:</span> <span class="string">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/aplayer/1.10.1/APlayer.min.js</span></span><br><span class="line">    <span class="attr">meting_js:</span> <span class="string">https://cdn1.tianli0.top/npm/js-heo@1.0.12/metingjs/Meting.min.js</span></span><br><span class="line">    <span class="comment"># prismjs_js: https://cdn1.tianli0.top/npm/prismjs@1.1.0/prism.js</span></span><br><span class="line">    <span class="comment"># prismjs_lineNumber_js: https://cdn1.tianli0.top/npm/prismjs/plugins/line-numbers/prism-line-numbers.min.js</span></span><br><span class="line">    <span class="comment"># prismjs_autoloader: https://cdn1.tianli0.top/npm/prismjs/plugins/autoloader/prism-autoloader.min.js</span></span><br></pre></td></tr></table></figure>
<h1 id="5-创建文章或页面"><a href="#5-创建文章或页面" class="headerlink" title="5. 创建文章或页面"></a>5. 创建文章或页面</h1><h2 id="5-1-模板"><a href="#5-1-模板" class="headerlink" title="5.1 模板"></a>5.1 模板</h2><p>在项目文件夹下有一个名为 <strong><code>scaffolds</code></strong> 的文件夹，该文件夹用于存放创建新页面或文章的模板markdown文件，在使用 <strong><code>hexo new [page] tags</code></strong> 指令创建新页面或文章时，使其 <strong><code>Front-matter</code></strong> 部分参照模板的样式进行创建。</p>
<blockquote>
<p>e.g. 创建标签页</p>
<blockquote>
<p><strong><code>scaffolds/page.md</code></strong> 文件内容如下:<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123;title&#125;&#125;</span><br><span class="line">date: &#123;&#123;date&#125;&#125;    </span><br><span class="line"><span class="section">type:             </span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><br>新建tags页面，输入:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><br>则会在项目文件夹下的 <strong><code>source/</code></strong> 文件夹下生成一个带有 <strong><code>index.md</code></strong> 文件的 <strong><code>tags/</code></strong> 文件夹<br>其内容为:<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2023-06-26 20:00:00    </span><br><span class="line"><span class="section">type:             </span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><br>若要使用该页面作为标签页，则在type 项中填入 “tags”<br>若要使用该页面作为友情链接页，则在type 项中填入 “link”</p>
</blockquote>
</blockquote>
<h2 id="5-2-Front-matter"><a href="#5-2-Front-matter" class="headerlink" title="5.2. Front-matter"></a>5.2. Front-matter</h2><p>Front-matter 是 markdown 文件最上方以 —- 分隔的区域，用于指定页面或文章的页面配置。</p>
<h3 id="5-2-1-Page-Front-matter"><a href="#5-2-1-Page-Front-matter" class="headerlink" title="5.2.1. Page Front-matter"></a>5.2.1. Page Front-matter</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span>            <span class="comment"># 必须 页面标题</span></span><br><span class="line"><span class="attr">date:</span>             <span class="comment"># 必须 页面创建时间</span></span><br><span class="line"><span class="attr">type:</span>             <span class="comment"># 必须 页面类型，标签，分类，友情链接页面必须配置</span></span><br><span class="line"><span class="attr">updated:</span>          <span class="comment"># 可选 页面更新时间</span></span><br><span class="line"><span class="attr">comments:</span>         <span class="comment"># 可选 显示页面评论模块</span></span><br><span class="line"><span class="attr">description:</span>      <span class="comment"># 可选 页面描述</span></span><br><span class="line"><span class="attr">keywords:</span>         <span class="comment"># 可选 页面关键字</span></span><br><span class="line"><span class="attr">top_img:</span>          <span class="comment"># 可选 页面顶部图片</span></span><br><span class="line"><span class="attr">mathjax:</span>          <span class="comment"># 可选 显示mathjax 当设置mathjax的per_page: false时，才需要配置，默认 false</span></span><br><span class="line"><span class="attr">katex:</span>            <span class="comment"># 可选 显示katex 当设置katex的per_page: false时，才需要配置，默认 false</span></span><br><span class="line"><span class="attr">aside:</span>            <span class="comment"># 可选 显示侧边栏</span></span><br><span class="line"><span class="attr">aplayer:</span>          <span class="comment"># 可选 在需要的页面加载aplayer的js和css</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="comment"># 可选 配置代码框是否展开 默认为设置中highlight_shrink的配置</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h3 id="5-2-2-Post-Front-matter"><a href="#5-2-2-Post-Front-matter" class="headerlink" title="5.2.2. Post Front-matter"></a>5.2.2. Post Front-matter</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span>                    <span class="comment"># 必须 文章标题</span></span><br><span class="line"><span class="attr">date:</span>                     <span class="comment"># 必须 文章创建日期</span></span><br><span class="line"><span class="attr">updated:</span>                  <span class="comment"># 可选 文章更新日期</span></span><br><span class="line"><span class="attr">tags:</span>                     <span class="comment"># 可选 文章标签</span></span><br><span class="line"><span class="attr">categories:</span>               <span class="comment"># 可选 文章分类</span></span><br><span class="line"><span class="attr">keywords:</span>                 <span class="comment"># 可选 文章关键词</span></span><br><span class="line"><span class="attr">description:</span>              <span class="comment"># 可选 文章描述</span></span><br><span class="line"><span class="attr">top_img:</span>                  <span class="comment"># 可选 文章顶部图</span></span><br><span class="line"><span class="attr">comments:</span>                 <span class="comment"># 可选 显示文章评论模块</span></span><br><span class="line"><span class="attr">cover:</span>                    <span class="comment"># 可选 文章缩略图</span></span><br><span class="line"><span class="attr">toc:</span>                      <span class="comment"># 可选 显示文章TOC</span></span><br><span class="line"><span class="attr">toc_number:</span>               <span class="comment"># 可选 显示文章TOC数量</span></span><br><span class="line"><span class="attr">toc_style_simple:</span>         <span class="comment"># 可选 显示TOC简洁模式</span></span><br><span class="line"><span class="attr">copyright:</span>                <span class="comment"># 可选 显示文章版权模块(默认为设置中post_copyright的enable配置)</span></span><br><span class="line"><span class="attr">copyright_author:</span>         <span class="comment"># 可选 文章版权模块的文章作者</span></span><br><span class="line"><span class="attr">copyright_author_href:</span>    <span class="comment"># 可选 文章版权模块的文章作者链接</span></span><br><span class="line"><span class="attr">copyright_url:</span>            <span class="comment"># 可选 文章版权模块的文章链接</span></span><br><span class="line"><span class="attr">copyright_info:</span>           <span class="comment"># 可选 文章版权模块的版权声明文字</span></span><br><span class="line"><span class="attr">mathjax:</span>                  <span class="comment"># 可选 显示mathjax 当设置mathjax的per_page: false时，才需要配置，默认 false</span></span><br><span class="line"><span class="attr">katex:</span>                    <span class="comment"># 可选 显示katex 当设置katex的per_page: false时，才需要配置，默认 false</span></span><br><span class="line"><span class="attr">aside:</span>                    <span class="comment"># 可选 显示侧边栏</span></span><br><span class="line"><span class="attr">aplayer:</span>                  <span class="comment"># 可选 在需要的页面加载aplayer的js和css</span></span><br><span class="line"><span class="attr">highlight_shrink:</span>         <span class="comment"># 可选 配置代码框是否展开 默认为设置中highlight_shrink的配置</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h1 id="6-主题配置"><a href="#6-主题配置" class="headerlink" title="6. 主题配置"></a>6. 主题配置</h1><h2 id="6-1-网站资料配置"><a href="#6-1-网站资料配置" class="headerlink" title="6.1. 网站资料配置"></a>6.1. 网站资料配置</h2><p>网站资料的配置在项目文件夹下的站点配置文件 <strong><code>_config.yml</code></strong> 中，其主要参数如下:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span>              <span class="comment"># 网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span>           <span class="comment"># 网站副标题</span></span><br><span class="line"><span class="attr">description:</span>        <span class="comment"># 网站描述</span></span><br><span class="line"><span class="attr">keywords:</span>           <span class="comment"># 网站的关键词</span></span><br><span class="line"><span class="attr">author:</span>             <span class="comment"># 网站的作者</span></span><br><span class="line"><span class="attr">language:</span>           <span class="comment"># 使用语言</span></span><br><span class="line"><span class="attr">timezone:</span>           <span class="comment"># 使用时区</span></span><br><span class="line"></span><br><span class="line"><span class="attr">url:</span>                <span class="comment"># 网站的url</span></span><br><span class="line"><span class="attr">root:</span>               <span class="comment"># 网站的根目录</span></span><br><span class="line"><span class="attr">permalink:</span>          <span class="comment"># 网站文章页的永久链接</span></span><br><span class="line"><span class="attr">permalink_defaults:</span> <span class="comment"># 文章页永久链接的格式</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span>   <span class="comment"># 是否在永久链接中保留尾部的 index.html，设置为 false 时去除</span></span><br><span class="line">  <span class="attr">trailing_html:</span>    <span class="comment"># 是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效)</span></span><br></pre></td></tr></table></figure>
<h2 id="6-2-导航栏配置"><a href="#6-2-导航栏配置" class="headerlink" title="6.2. 导航栏配置"></a>6.2. 导航栏配置</h2><p>导航栏的配置在项目文件夹下的主题配置文件 <strong><code>_config.butterfly.yml</code></strong> 中，其主要参数如下:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 左上角图标</span></span><br><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">logo:</span>             <span class="comment"># 网站logo，支持图片，直接填入图片链接</span></span><br><span class="line">  <span class="attr">display_title:</span>    <span class="comment"># 是否显示网站标题</span></span><br><span class="line">  <span class="attr">fixed:</span>            <span class="comment"># 是否固定导航栏</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span>               <span class="comment"># 菜单栏设置,，该主题的菜单栏在顶部导航栏的右侧，从上到下，依次从左至右排布</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">List</span> <span class="string">||</span> <span class="attr">fas fa-list:</span> <span class="string">||</span> <span class="attr">hide:</span></span><br><span class="line">    <span class="attr">Music:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="attr">Movie:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line">  <span class="attr">Link:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br><span class="line">  <span class="comment"># 多级按钮参数格式: 多级按钮名称(可自定义) || 图标(可自定义) || hide:(无此项则不隐藏子按钮)</span></span><br><span class="line">  <span class="comment"># 跳转按钮参数格式: 导航按钮名称(可自定义): 导航跳转页面对应的路径 || 图标(可自定义)</span></span><br></pre></td></tr></table></figure></p>
<table><tr><td bgcolor=MistyRose>跳转路径必須是 /xxx/， 图标名可不写，不写则不显示图标 </td></tr></table>

<h2 id="6-3-文章封面配置"><a href="#6-3-文章封面配置" class="headerlink" title="6.3. 文章封面配置"></a>6.3. 文章封面配置</h2><p>文章封面的配置在项目文件夹下的主题配置文件 <strong><code>_config.butterfly.yml</code></strong> 中，其主要参数如下:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="attr">index_enable:</span>             <span class="comment"># 主页是否显示文章封面图</span></span><br><span class="line">  <span class="attr">aside_enable:</span>             <span class="comment"># 侧栏是否显示文章封面图</span></span><br><span class="line">  <span class="attr">archives_enable:</span>          <span class="comment"># 归档页面是否显示文章封面图</span></span><br><span class="line">  <span class="attr">position:</span>                 <span class="comment"># 封面顯示的位置，三個值可配置 left , right , both(一左一右)</span></span><br><span class="line">  <span class="attr">default_cover:</span>            <span class="comment"># 默认封面，若文章页在Front-matter中配置了cover，则使用文章页中的配置项</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/xxxxx</span>                <span class="comment"># 配置多项，则随机为其中一项</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/xxxxxxxxxxxxxx</span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-4-文章meta配置"><a href="#6-4-文章meta配置" class="headerlink" title="6.4. 文章meta配置"></a>6.4. 文章meta配置</h2><p>文章meta的配置在项目文件夹下的主题配置文件 <strong><code>_config.butterfly.yml</code></strong> 中，其主要参数如下:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_meta:</span>          <span class="comment"># 页面meta显示</span></span><br><span class="line">  <span class="attr">page:</span>             <span class="comment"># Home Page</span></span><br><span class="line">    <span class="attr">date_type:</span>      <span class="comment"># created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span></span><br><span class="line">    <span class="attr">date_format:</span>    <span class="comment"># date/relative 顯示日期還是相對日期</span></span><br><span class="line">    <span class="attr">categories:</span>     <span class="comment"># true or false 主頁是否顯示分類</span></span><br><span class="line">    <span class="attr">tags:</span>           <span class="comment"># true or false 主頁是否顯示標籤</span></span><br><span class="line">    <span class="attr">label:</span>          <span class="comment"># true or false 顯示描述性文字</span></span><br><span class="line">  <span class="attr">post:</span></span><br><span class="line">    <span class="attr">date_type:</span>      <span class="comment"># created or updated or both 文章頁日期是創建日或者更新日或都顯示</span></span><br><span class="line">    <span class="attr">date_format:</span>    <span class="comment"># date/relative 顯示日期還是相對日期</span></span><br><span class="line">    <span class="attr">categories:</span>     <span class="comment"># true or false 文章頁是否顯示分類</span></span><br><span class="line">    <span class="attr">tags:</span>           <span class="comment"># true or false 文章頁是否顯示標籤</span></span><br><span class="line">    <span class="attr">label:</span>          <span class="comment"># true or false 顯示描述性文字</span></span><br><span class="line"></span><br><span class="line"><span class="attr">index_post_content:</span> <span class="comment"># 主页显示文章节选</span></span><br><span class="line">  <span class="attr">method:</span>           <span class="comment"># 1:显示描述；2:自动；3:截取一部分正文 false:不显示描述</span></span><br><span class="line">  <span class="attr">length:</span>           <span class="comment"># 截取文章前多少个字</span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-5-顶部图片配置"><a href="#6-5-顶部图片配置" class="headerlink" title="6.5. 顶部图片配置"></a>6.5. 顶部图片配置</h2><p>顶部图片的配置在项目文件夹下的主题配置文件 <strong><code>_config.butterfly.yml</code></strong> 中，其主要参数如下:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 页面顶图配置</span></span><br><span class="line"><span class="comment"># category_per_img和tag_per_img，可配置多张，每次会随机取一张</span></span><br><span class="line"><span class="comment"># format:</span></span><br><span class="line"><span class="comment">#  - category name: xxxxx</span></span><br><span class="line"><span class="attr">disable_top_img:</span>       <span class="comment"># 全站不显示顶部图片</span></span><br><span class="line"><span class="attr">index_img:</span>             <span class="comment"># 首页的顶部图片</span></span><br><span class="line"><span class="attr">default_top_img:</span>       <span class="comment"># 默认的顶部图片</span></span><br><span class="line"><span class="attr">archive_img:</span>           <span class="comment"># 归档页顶部图片</span></span><br><span class="line"><span class="attr">tag_img:</span>               <span class="comment"># 标签页顶部图片</span></span><br><span class="line"><span class="attr">tag_per_img:</span>           <span class="comment"># 每个标签页的顶部图片，可配置多张</span></span><br><span class="line"><span class="attr">category_img:</span>          <span class="comment"># 分类页顶部图片</span></span><br><span class="line"><span class="attr">category_per_img:</span>      <span class="comment"># 每个分类页的顶部图片，可配置多张</span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-6-文章内容配置"><a href="#6-6-文章内容配置" class="headerlink" title="6.6. 文章内容配置"></a>6.6. 文章内容配置</h2><p>文章内容的配置在项目文件夹下的主题配置文件 <strong><code>_config.butterfly.yml</code></strong> 中，其主要参数如下:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">noticeOutdate:</span>    <span class="comment"># 文章过期提醒，可设置是否显示文章过期提醒，以更新时间为基准。会在文章最上面提示一个弹出框说明过期信息</span></span><br><span class="line">  <span class="attr">enable:</span>         <span class="comment"># 是否启用该功能</span></span><br><span class="line">  <span class="attr">style:</span>          <span class="comment"># style: simple/flat</span></span><br><span class="line">  <span class="attr">limit_day:</span>      <span class="comment"># 距离更新时间多少天才显示文章过期提醒</span></span><br><span class="line">  <span class="attr">position:</span>       <span class="comment"># position: top/bottom</span></span><br><span class="line">  <span class="attr">message_prev:</span>   <span class="comment"># 天数之前的文字</span></span><br><span class="line">  <span class="attr">message_next:</span>   <span class="comment"># 天数之后的文字</span></span><br><span class="line"></span><br><span class="line"><span class="attr">post_edit:</span>        <span class="comment"># 文章是否可以编辑，在文章标题旁边显示一个编辑按钮，点击会跳转到对应的链接</span></span><br><span class="line">  <span class="attr">enable:</span>         <span class="comment"># 是否启用该功能</span></span><br><span class="line">  <span class="attr">url:</span>            <span class="comment"># 编辑该文章的链接</span></span><br><span class="line"></span><br><span class="line"><span class="attr">toc:</span>              <span class="comment"># 文章目录配置</span></span><br><span class="line">  <span class="attr">post:</span>           <span class="comment"># 文章页是否显示目录</span></span><br><span class="line">  <span class="attr">page:</span>           <span class="comment"># 普通页面是否显示目录</span></span><br><span class="line">  <span class="attr">number:</span>         <span class="comment"># 是否显示章节数</span></span><br><span class="line">  <span class="attr">expand:</span>         <span class="comment"># 是否展开 TOC</span></span><br><span class="line">  <span class="attr">style_simple:</span>   <span class="comment"># 简洁模式（侧边栏只显示 TOC, 只对文章页有效 ）</span></span><br><span class="line">  <span class="attr">scroll_percent:</span> <span class="comment"># 是否显示滚动进度百分比</span></span><br><span class="line"></span><br><span class="line"><span class="attr">copy:</span>             <span class="comment"># 复制配置，开启后复制内容后会加入版权信息</span></span><br><span class="line">  <span class="attr">enable:</span>         <span class="comment"># 是否启用该功能</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">    <span class="attr">enable:</span>       <span class="comment"># 是否添加版权信息</span></span><br><span class="line">    <span class="attr">limit_count:</span>  <span class="comment"># 复制行数多于此行数配置时会默认添加版本信息</span></span><br><span class="line"></span><br><span class="line"><span class="attr">post_copyright:</span>   <span class="comment"># 版权配置</span></span><br><span class="line">  <span class="attr">enable:</span>         <span class="comment"># 是否启用该功能</span></span><br><span class="line">  <span class="attr">decode:</span>         <span class="comment"># true来显示中文网址</span></span><br><span class="line">  <span class="attr">author_href:</span>    <span class="comment"># 作者链接地址  </span></span><br><span class="line">  <span class="attr">license:</span>        <span class="comment"># 版权声明</span></span><br><span class="line">  <span class="attr">license_url:</span>    <span class="comment"># 版权声明链接</span></span><br><span class="line"><span class="comment"># 可在每个文章页的 Front-matter 中进行单独配置</span></span><br><span class="line"><span class="attr">copyright_author:</span>  </span><br><span class="line"><span class="attr">copyright_author_href:</span>  </span><br><span class="line"><span class="attr">copyright_url:</span> </span><br><span class="line"><span class="attr">copyright_info:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span>           <span class="comment"># 文章底部的打赏功能</span></span><br><span class="line">  <span class="attr">enable:</span>         <span class="comment"># 是否启用该功能</span></span><br><span class="line">  <span class="attr">QR_code:</span>        <span class="comment"># 可配置多个打赏二维码图片</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/xxxx</span></span><br><span class="line"></span><br><span class="line"><span class="attr">post_pagination:</span>  <span class="comment"># 推送文章分页，1表示左侧推送上一篇，2表示左侧推送上一篇</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharejs:</span>          <span class="comment"># 文章分享设置</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sites:</span>          <span class="comment"># 参数为:facebook,twitter,wechat,weibo,qq</span></span><br><span class="line"></span><br><span class="line"><span class="attr">addtoany:</span>         <span class="comment"># 文章分享设置，和上述分享设置二选一</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">item:</span>           <span class="comment"># 参数为:facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link</span></span><br><span class="line"></span><br><span class="line"><span class="attr">related_post:</span>     <span class="comment"># 推荐文章设置</span></span><br><span class="line">  <span class="attr">enable:</span>  </span><br><span class="line">  <span class="attr">limit:</span>          <span class="comment"># 显示推荐文章数目</span></span><br><span class="line">  <span class="attr">date_type:</span>      <span class="comment"># created or updated 文章日期显示创建日或者更新日</span></span><br><span class="line"></span><br><span class="line"><span class="attr">photofigcaption:</span>  <span class="comment"># 是否显示图片的描述，优先显示图片的title属性，然后是alt属性</span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-7-代码样式配置"><a href="#6-7-代码样式配置" class="headerlink" title="6.7. 代码样式配置"></a>6.7. 代码样式配置</h2><p>文章内容的配置在项目文件夹下的主题配置文件 <strong><code>_config.butterfly.yml</code></strong> 中，其主要参数如下:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight_theme:</span>        <span class="comment"># 代码高亮：darker、light、ocean、mac、pale night、mac light</span></span><br><span class="line"><span class="attr">highlight_copy:</span>         <span class="comment"># 代码支持复制</span></span><br><span class="line"><span class="attr">highlight_shrink:</span>       <span class="comment"># 代码框是否默认展开，true表示不展开，需点击 &#x27;&gt;&#x27; 打开，可选值还有none，不显示 &#x27;&gt;&#x27;</span></span><br><span class="line"><span class="attr">highlight_lang:</span>         <span class="comment"># 是否显示语言</span></span><br><span class="line"><span class="attr">code_word_wrap:</span>         <span class="comment"># 代码自动换行，不会出现滚动条</span></span><br><span class="line"><span class="attr">highlight_height_limit:</span> <span class="comment"># unit: px，代码高度配置，超出部分会隐藏</span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-8-社交图标配置"><a href="#6-8-社交图标配置" class="headerlink" title="6.8. 社交图标配置"></a>6.8. 社交图标配置</h2><p>社交图标的配置在项目文件夹下的主题配置文件 <strong><code>_config.butterfly.yml</code></strong> 中，其主要参数如下:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="comment"># formal:</span></span><br><span class="line">  <span class="comment"># icon: link || the description || color </span></span><br><span class="line">  <span class="comment"># [icon]为图标的样式 [link]为图标点击后跳转的链接 [description]为该图标的描述 [color] 为该图标的颜色</span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-9-页脚配置"><a href="#6-9-页脚配置" class="headerlink" title="6.9. 页脚配置"></a>6.9. 页脚配置</h2><p>页脚的配置在项目文件夹下的主题配置文件 <strong><code>_config.butterfly.yml</code></strong> 中，其主要参数如下:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span>      </span><br><span class="line">    <span class="attr">since:</span>         <span class="comment"># 网站的建站时间</span></span><br><span class="line">  <span class="attr">custom_text:</span>     <span class="comment"># 自定义文本，支持HTML</span></span><br><span class="line">  <span class="attr">copyright:</span>       <span class="comment"># 显示博客的框架和主题  </span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-10-侧边栏配置"><a href="#6-10-侧边栏配置" class="headerlink" title="6.10. 侧边栏配置"></a>6.10. 侧边栏配置</h2><p>侧边栏的配置在项目文件夹下的主题配置文件 <strong><code>_config.butterfly.yml</code></strong> 中，其主要参数如下:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span>         <span class="comment"># 启用侧边栏</span></span><br><span class="line">  <span class="attr">hide:</span>           <span class="comment"># 是否隐藏</span></span><br><span class="line">  <span class="attr">button:</span>         <span class="comment"># 是否显示右下角的按钮</span></span><br><span class="line">  <span class="attr">mobile:</span>         <span class="comment"># 是否在手机上显示</span></span><br><span class="line">  <span class="attr">position:</span>       <span class="comment"># 侧边栏的位置，left or right</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">archive:</span>      <span class="comment"># 是否展示文章信息</span></span><br><span class="line">    <span class="attr">tag:</span>          <span class="comment"># 是否展示标签信息</span></span><br><span class="line">    <span class="attr">category:</span>     <span class="comment"># 是否展示分类信息</span></span><br><span class="line">  <span class="attr">card_author:</span></span><br><span class="line">    <span class="attr">enable:</span>       <span class="comment"># 是否显示作者栏卡片</span></span><br><span class="line">    <span class="attr">description:</span></span><br><span class="line">    <span class="attr">button:</span></span><br><span class="line">      <span class="attr">enable:</span>     <span class="comment"># 是否显示作者链接按钮</span></span><br><span class="line">      <span class="attr">icon:</span>       <span class="comment"># 图标</span></span><br><span class="line">      <span class="attr">text:</span>       <span class="comment"># 文字</span></span><br><span class="line">      <span class="attr">link:</span>       <span class="comment"># 链接</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span>       <span class="comment"># 是否显示公告栏</span></span><br><span class="line">    <span class="attr">content:</span>      <span class="comment"># 支持HTML</span></span><br><span class="line">  <span class="attr">card_recent_post:</span></span><br><span class="line">    <span class="attr">enable:</span>       <span class="comment"># 是否显示最新文章卡片</span></span><br><span class="line">    <span class="attr">limit:</span>        <span class="comment"># 显示数量，如果为0，则显示全部</span></span><br><span class="line">    <span class="attr">sort:</span>         <span class="comment"># 根据创建时间或更新时间排序</span></span><br><span class="line">    <span class="attr">sort_order:</span>   </span><br><span class="line">  <span class="attr">card_categories:</span></span><br><span class="line">    <span class="attr">enable:</span>       <span class="comment"># 是否显示分类卡片</span></span><br><span class="line">    <span class="attr">limit:</span>  </span><br><span class="line">    <span class="attr">expand:</span>  </span><br><span class="line">    <span class="attr">sort_order:</span>  </span><br><span class="line">  <span class="attr">card_tags:</span></span><br><span class="line">    <span class="attr">enable:</span>       <span class="comment"># 是否显示标签卡片</span></span><br><span class="line">    <span class="attr">limit:</span>  </span><br><span class="line">    <span class="attr">color:</span>        <span class="comment"># 是否使用色彩区分</span></span><br><span class="line">    <span class="attr">orderby:</span>  </span><br><span class="line">    <span class="attr">order:</span>  </span><br><span class="line">    <span class="attr">sort_order:</span></span><br><span class="line">  <span class="attr">card_archives:</span></span><br><span class="line">    <span class="attr">enable:</span>       <span class="comment"># 是否显示归档卡片</span></span><br><span class="line">    <span class="attr">type:</span>  </span><br><span class="line">    <span class="attr">format:</span>  </span><br><span class="line">    <span class="attr">order:</span> </span><br><span class="line">    <span class="attr">limit:</span> </span><br><span class="line">    <span class="attr">sort_order:</span>  </span><br><span class="line">  <span class="attr">card_webinfo:</span></span><br><span class="line">    <span class="attr">enable:</span>       <span class="comment"># 是否显示网站信息</span></span><br><span class="line">    <span class="attr">post_count:</span>   <span class="comment"># 文是否显示章数量</span></span><br><span class="line">    <span class="attr">last_push_date:</span>  <span class="comment"># 是否显示最后提交时间</span></span><br><span class="line">    <span class="attr">sort_order:</span>  </span><br></pre></td></tr></table></figure></p>
<h1 id="7-主题优化"><a href="#7-主题优化" class="headerlink" title="7. 主题优化"></a>7. 主题优化</h1><h2 id="7-1-背景一图流配置"><a href="#7-1-背景一图流配置" class="headerlink" title="7.1 背景一图流配置"></a>7.1 背景一图流配置</h2><p>主题背景一图流配置需要将页头和页脚加上透明遮罩，使得配置的背景图铺满整个网页<br>在项目文件夹下的 <strong><code>source/</code></strong> 文件夹下，新建一个CSS文件夹，并新建一个CSS文件 <strong><code>background</code></strong>, 其内容如下:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 页脚与头图透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-id">#page-header</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/* 白天模式遮罩透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/* 夜间模式遮罩透明 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> </span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在主题中引用该CSS文件, 同时需要关闭主页顶部图片和页脚图片，修改主题配置文件 <strong><code>_config.butterfly.yml</code></strong><br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">disable_top_img:</span> <span class="literal">false</span>  <span class="comment"># 设置为false</span></span><br><span class="line"><span class="attr">index_img:</span>              <span class="comment"># 留空</span></span><br><span class="line"><span class="attr">background:</span>             <span class="comment"># 设置为自己想要的背景图 e.g. url(/assets/pixiv/736461.png)</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="literal">false</span>        <span class="comment"># 设置为false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/background.css&quot;&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="7-2-搜索功能"><a href="#7-2-搜索功能" class="headerlink" title="7.2. 搜索功能"></a>7.2. 搜索功能</h2><p>使用本地搜索，详情: <a href="https://github.com/next-theme/hexo-generator-searchdb">https://github.com/next-theme/hexo-generator-searchdb</a><br>安装 <code>hexo-generator-searchdb</code><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure></p>
<p>修改配置文件 <strong><code>_config.yml</code></strong><br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure></p>
<p>修改主题配置文件 <strong><code>_config.butterfly.yml</code></strong><br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br></pre></td></tr></table></figure></p>
<h2 id="7-3-字数统计"><a href="#7-3-字数统计" class="headerlink" title="7.3. 字数统计"></a>7.3. 字数统计</h2><p>安装 <code>hexo-wordcount</code><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure></p>
<p>修改主题配置文件 <strong><code>_config.butterfly.yml</code></strong><br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<h2 id="7-4-外挂标签"><a href="#7-4-外挂标签" class="headerlink" title="7.4. 外挂标签"></a>7.4. 外挂标签</h2><p>安装 <code>npm install hexo-butterfly-tag-plugins-plus</code><br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-butterfly-tag-plugins-plus</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure></p>
<p><code>hexo</code> 自带的 <code>markdown</code> 渲染插件 <code>hexo-renderer-marked</code> 与外挂标签语法的兼容性较差，替换成 <code>hexo-renderer-kramed</code><br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">uninstall</span> <span class="string">hexo-renderer-marked</span> <span class="string">--save</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-renderer-kramed</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure></p>
<p>修改主题配置文件 <strong><code>_config.butterfly.yml</code></strong><br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tag-plugins-plus</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/615e2dec/</span></span><br><span class="line"><span class="attr">tag_plugins:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>    <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span>     <span class="comment"># 过滤器优先权</span></span><br><span class="line">  <span class="attr">issues:</span> <span class="literal">false</span>   <span class="comment"># issues标签依赖注入开关</span></span><br><span class="line">  <span class="attr">link:</span></span><br><span class="line">    <span class="attr">placeholder:</span>  <span class="comment"># link_card标签默认的图标图片</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br><span class="line">    <span class="attr">anima:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css</span> <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">    <span class="attr">jquery:</span> <span class="string">https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">issues:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/issues.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">iconfont:</span> <span class="string">//at.alicdn.com/t/font_2032782_8d5kxvn09md.js</span> <span class="comment">#参看https://akilar.top/posts/d2ebecef/</span></span><br><span class="line">    <span class="attr">carousel:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js</span></span><br><span class="line">    <span class="attr">tag_plugins_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css</span></span><br></pre></td></tr></table></figure></p>
<h2 id="7-5-每页单独配置背景"><a href="#7-5-每页单独配置背景" class="headerlink" title="7.5. 每页单独配置背景"></a>7.5. 每页单独配置背景</h2><p>在需要配置的文章页或其他页的Markdown文件中加入一下配置样式<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">raw</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="comment">#web_bg&#123;</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">url(/img/newbg.png)!important;</span></span><br><span class="line">  <span class="string">/*重新定义background会导致原有定位属性失效，所以也需要再声明一次加权的定位属性*/</span></span><br><span class="line">  <span class="attr">background-position:</span> <span class="string">center</span> <span class="type">!important;</span></span><br><span class="line">  <span class="attr">background-size:</span> <span class="string">cover</span> <span class="type">!important;</span></span><br><span class="line">  <span class="attr">background-repeat:</span> <span class="literal">no</span><span class="string">-repeat</span> <span class="type">!important;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endraw</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux笔记】简介</title>
    <url>/posts/20230629/135145.html</url>
    <content><![CDATA[<h1 id="TODO-💤"><a href="#TODO-💤" class="headerlink" title="TODO 💤"></a>TODO 💤</h1>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux笔记】Shell</title>
    <url>/posts/20230629/135252.html</url>
    <content><![CDATA[<h1 id="TODO-💤"><a href="#TODO-💤" class="headerlink" title="TODO 💤"></a>TODO 💤</h1>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
        <tag>脚本语言</tag>
      </tags>
  </entry>
</search>
